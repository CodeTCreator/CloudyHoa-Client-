<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>