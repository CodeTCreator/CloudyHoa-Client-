//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CloudyHoa_Client_.MetadataService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MetadataService.IMetadataService")]
    public interface IMetadataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetadataService/AddParameter", ReplyAction="http://tempuri.org/IMetadataService/AddParameterResponse")]
        void AddParameter(int hoaId, int typeObject, string propertyName, int typeProperty, string systemName, string formula, bool staticParam, bool calculated);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetadataService/AddParameter", ReplyAction="http://tempuri.org/IMetadataService/AddParameterResponse")]
        System.Threading.Tasks.Task AddParameterAsync(int hoaId, int typeObject, string propertyName, int typeProperty, string systemName, string formula, bool staticParam, bool calculated);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetadataService/DeleteParameter", ReplyAction="http://tempuri.org/IMetadataService/DeleteParameterResponse")]
        void DeleteParameter(int parameterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetadataService/DeleteParameter", ReplyAction="http://tempuri.org/IMetadataService/DeleteParameterResponse")]
        System.Threading.Tasks.Task DeleteParameterAsync(int parameterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetadataService/EditParameter", ReplyAction="http://tempuri.org/IMetadataService/EditParameterResponse")]
        void EditParameter(int parameterId, string propertyName, int typeProperty, string systemName, string formula, bool staticParam, bool calculated);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetadataService/EditParameter", ReplyAction="http://tempuri.org/IMetadataService/EditParameterResponse")]
        System.Threading.Tasks.Task EditParameterAsync(int parameterId, string propertyName, int typeProperty, string systemName, string formula, bool staticParam, bool calculated);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetadataService/AddTypeObject", ReplyAction="http://tempuri.org/IMetadataService/AddTypeObjectResponse")]
        void AddTypeObject(string nameType, System.Nullable<int> parentType, int hoaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetadataService/AddTypeObject", ReplyAction="http://tempuri.org/IMetadataService/AddTypeObjectResponse")]
        System.Threading.Tasks.Task AddTypeObjectAsync(string nameType, System.Nullable<int> parentType, int hoaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetadataService/EditTypeObject", ReplyAction="http://tempuri.org/IMetadataService/EditTypeObjectResponse")]
        void EditTypeObject(int typeId, string nameType, System.Nullable<int> parentType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetadataService/EditTypeObject", ReplyAction="http://tempuri.org/IMetadataService/EditTypeObjectResponse")]
        System.Threading.Tasks.Task EditTypeObjectAsync(int typeId, string nameType, System.Nullable<int> parentType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetadataService/DeleteTypeObject", ReplyAction="http://tempuri.org/IMetadataService/DeleteTypeObjectResponse")]
        void DeleteTypeObject(int typeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetadataService/DeleteTypeObject", ReplyAction="http://tempuri.org/IMetadataService/DeleteTypeObjectResponse")]
        System.Threading.Tasks.Task DeleteTypeObjectAsync(int typeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetadataService/GetAllTypesObjects", ReplyAction="http://tempuri.org/IMetadataService/GetAllTypesObjectsResponse")]
        System.Data.DataSet GetAllTypesObjects();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetadataService/GetAllTypesObjects", ReplyAction="http://tempuri.org/IMetadataService/GetAllTypesObjectsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAllTypesObjectsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetadataService/GetTypesObjects", ReplyAction="http://tempuri.org/IMetadataService/GetTypesObjectsResponse")]
        System.Data.DataSet GetTypesObjects(int hoaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetadataService/GetTypesObjects", ReplyAction="http://tempuri.org/IMetadataService/GetTypesObjectsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetTypesObjectsAsync(int hoaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetadataService/GetParameters", ReplyAction="http://tempuri.org/IMetadataService/GetParametersResponse")]
        System.Data.DataSet GetParameters(int typeObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetadataService/GetParameters", ReplyAction="http://tempuri.org/IMetadataService/GetParametersResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetParametersAsync(int typeObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetadataService/GetTypesParameters", ReplyAction="http://tempuri.org/IMetadataService/GetTypesParametersResponse")]
        System.Data.DataSet GetTypesParameters();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetadataService/GetTypesParameters", ReplyAction="http://tempuri.org/IMetadataService/GetTypesParametersResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetTypesParametersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetadataService/GetServices", ReplyAction="http://tempuri.org/IMetadataService/GetServicesResponse")]
        System.Data.DataSet GetServices(int typeObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetadataService/GetServices", ReplyAction="http://tempuri.org/IMetadataService/GetServicesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetServicesAsync(int typeObject);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMetadataServiceChannel : CloudyHoa_Client_.MetadataService.IMetadataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MetadataServiceClient : System.ServiceModel.ClientBase<CloudyHoa_Client_.MetadataService.IMetadataService>, CloudyHoa_Client_.MetadataService.IMetadataService {
        
        public MetadataServiceClient() {
        }
        
        public MetadataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MetadataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MetadataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MetadataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddParameter(int hoaId, int typeObject, string propertyName, int typeProperty, string systemName, string formula, bool staticParam, bool calculated) {
            base.Channel.AddParameter(hoaId, typeObject, propertyName, typeProperty, systemName, formula, staticParam, calculated);
        }
        
        public System.Threading.Tasks.Task AddParameterAsync(int hoaId, int typeObject, string propertyName, int typeProperty, string systemName, string formula, bool staticParam, bool calculated) {
            return base.Channel.AddParameterAsync(hoaId, typeObject, propertyName, typeProperty, systemName, formula, staticParam, calculated);
        }
        
        public void DeleteParameter(int parameterId) {
            base.Channel.DeleteParameter(parameterId);
        }
        
        public System.Threading.Tasks.Task DeleteParameterAsync(int parameterId) {
            return base.Channel.DeleteParameterAsync(parameterId);
        }
        
        public void EditParameter(int parameterId, string propertyName, int typeProperty, string systemName, string formula, bool staticParam, bool calculated) {
            base.Channel.EditParameter(parameterId, propertyName, typeProperty, systemName, formula, staticParam, calculated);
        }
        
        public System.Threading.Tasks.Task EditParameterAsync(int parameterId, string propertyName, int typeProperty, string systemName, string formula, bool staticParam, bool calculated) {
            return base.Channel.EditParameterAsync(parameterId, propertyName, typeProperty, systemName, formula, staticParam, calculated);
        }
        
        public void AddTypeObject(string nameType, System.Nullable<int> parentType, int hoaId) {
            base.Channel.AddTypeObject(nameType, parentType, hoaId);
        }
        
        public System.Threading.Tasks.Task AddTypeObjectAsync(string nameType, System.Nullable<int> parentType, int hoaId) {
            return base.Channel.AddTypeObjectAsync(nameType, parentType, hoaId);
        }
        
        public void EditTypeObject(int typeId, string nameType, System.Nullable<int> parentType) {
            base.Channel.EditTypeObject(typeId, nameType, parentType);
        }
        
        public System.Threading.Tasks.Task EditTypeObjectAsync(int typeId, string nameType, System.Nullable<int> parentType) {
            return base.Channel.EditTypeObjectAsync(typeId, nameType, parentType);
        }
        
        public void DeleteTypeObject(int typeId) {
            base.Channel.DeleteTypeObject(typeId);
        }
        
        public System.Threading.Tasks.Task DeleteTypeObjectAsync(int typeId) {
            return base.Channel.DeleteTypeObjectAsync(typeId);
        }
        
        public System.Data.DataSet GetAllTypesObjects() {
            return base.Channel.GetAllTypesObjects();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAllTypesObjectsAsync() {
            return base.Channel.GetAllTypesObjectsAsync();
        }
        
        public System.Data.DataSet GetTypesObjects(int hoaId) {
            return base.Channel.GetTypesObjects(hoaId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetTypesObjectsAsync(int hoaId) {
            return base.Channel.GetTypesObjectsAsync(hoaId);
        }
        
        public System.Data.DataSet GetParameters(int typeObject) {
            return base.Channel.GetParameters(typeObject);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetParametersAsync(int typeObject) {
            return base.Channel.GetParametersAsync(typeObject);
        }
        
        public System.Data.DataSet GetTypesParameters() {
            return base.Channel.GetTypesParameters();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetTypesParametersAsync() {
            return base.Channel.GetTypesParametersAsync();
        }
        
        public System.Data.DataSet GetServices(int typeObject) {
            return base.Channel.GetServices(typeObject);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetServicesAsync(int typeObject) {
            return base.Channel.GetServicesAsync(typeObject);
        }
    }
}
