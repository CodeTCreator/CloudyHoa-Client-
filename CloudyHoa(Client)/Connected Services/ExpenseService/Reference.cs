//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CloudyHoa_Client_.ExpenseService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ExpenseService.IExpensesService")]
    public interface IExpensesService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpensesService/AddCategory", ReplyAction="http://tempuri.org/IExpensesService/AddCategoryResponse")]
        void AddCategory(string name, int hoa_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpensesService/AddCategory", ReplyAction="http://tempuri.org/IExpensesService/AddCategoryResponse")]
        System.Threading.Tasks.Task AddCategoryAsync(string name, int hoa_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpensesService/EditCategory", ReplyAction="http://tempuri.org/IExpensesService/EditCategoryResponse")]
        void EditCategory(int categoryId, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpensesService/EditCategory", ReplyAction="http://tempuri.org/IExpensesService/EditCategoryResponse")]
        System.Threading.Tasks.Task EditCategoryAsync(int categoryId, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpensesService/DeleteCategory", ReplyAction="http://tempuri.org/IExpensesService/DeleteCategoryResponse")]
        void DeleteCategory(int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpensesService/DeleteCategory", ReplyAction="http://tempuri.org/IExpensesService/DeleteCategoryResponse")]
        System.Threading.Tasks.Task DeleteCategoryAsync(int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpensesService/AddExpense", ReplyAction="http://tempuri.org/IExpensesService/AddExpenseResponse")]
        void AddExpense(int categoryId, string name, float quantity, float cost, float resultCost, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpensesService/AddExpense", ReplyAction="http://tempuri.org/IExpensesService/AddExpenseResponse")]
        System.Threading.Tasks.Task AddExpenseAsync(int categoryId, string name, float quantity, float cost, float resultCost, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpensesService/AddExternalExpense", ReplyAction="http://tempuri.org/IExpensesService/AddExternalExpenseResponse")]
        void AddExternalExpense(int categoryId, string name, float quantity, float cost, float resultCost, System.DateTime date, int objectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpensesService/AddExternalExpense", ReplyAction="http://tempuri.org/IExpensesService/AddExternalExpenseResponse")]
        System.Threading.Tasks.Task AddExternalExpenseAsync(int categoryId, string name, float quantity, float cost, float resultCost, System.DateTime date, int objectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpensesService/EditExpense", ReplyAction="http://tempuri.org/IExpensesService/EditExpenseResponse")]
        void EditExpense(int expenseId, int categoryId, string name, float quantity, float cost, float resultCost, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpensesService/EditExpense", ReplyAction="http://tempuri.org/IExpensesService/EditExpenseResponse")]
        System.Threading.Tasks.Task EditExpenseAsync(int expenseId, int categoryId, string name, float quantity, float cost, float resultCost, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpensesService/EditExternalExpense", ReplyAction="http://tempuri.org/IExpensesService/EditExternalExpenseResponse")]
        void EditExternalExpense(int expenseId, int categoryId, string name, float quantity, float cost, float resultCost, System.DateTime date, int objectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpensesService/EditExternalExpense", ReplyAction="http://tempuri.org/IExpensesService/EditExternalExpenseResponse")]
        System.Threading.Tasks.Task EditExternalExpenseAsync(int expenseId, int categoryId, string name, float quantity, float cost, float resultCost, System.DateTime date, int objectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpensesService/DeleteExpense", ReplyAction="http://tempuri.org/IExpensesService/DeleteExpenseResponse")]
        void DeleteExpense(int expenseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpensesService/DeleteExpense", ReplyAction="http://tempuri.org/IExpensesService/DeleteExpenseResponse")]
        System.Threading.Tasks.Task DeleteExpenseAsync(int expenseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpensesService/GetCategories", ReplyAction="http://tempuri.org/IExpensesService/GetCategoriesResponse")]
        System.Data.DataSet GetCategories(int hoa_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpensesService/GetCategories", ReplyAction="http://tempuri.org/IExpensesService/GetCategoriesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCategoriesAsync(int hoa_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpensesService/GetExpenses", ReplyAction="http://tempuri.org/IExpensesService/GetExpensesResponse")]
        System.Data.DataSet GetExpenses(System.DateTime dateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpensesService/GetExpenses", ReplyAction="http://tempuri.org/IExpensesService/GetExpensesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetExpensesAsync(System.DateTime dateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpensesService/GetAllExpenses", ReplyAction="http://tempuri.org/IExpensesService/GetAllExpensesResponse")]
        System.Data.DataSet GetAllExpenses(int hoa_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpensesService/GetAllExpenses", ReplyAction="http://tempuri.org/IExpensesService/GetAllExpensesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAllExpensesAsync(int hoa_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpensesService/GetInternalExpenses", ReplyAction="http://tempuri.org/IExpensesService/GetInternalExpensesResponse")]
        System.Data.DataSet GetInternalExpenses(int hoa_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpensesService/GetInternalExpenses", ReplyAction="http://tempuri.org/IExpensesService/GetInternalExpensesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetInternalExpensesAsync(int hoa_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpensesService/GetExternalExpenses", ReplyAction="http://tempuri.org/IExpensesService/GetExternalExpensesResponse")]
        System.Data.DataSet GetExternalExpenses(int hoa_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpensesService/GetExternalExpenses", ReplyAction="http://tempuri.org/IExpensesService/GetExternalExpensesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetExternalExpensesAsync(int hoa_id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IExpensesServiceChannel : CloudyHoa_Client_.ExpenseService.IExpensesService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExpensesServiceClient : System.ServiceModel.ClientBase<CloudyHoa_Client_.ExpenseService.IExpensesService>, CloudyHoa_Client_.ExpenseService.IExpensesService {
        
        public ExpensesServiceClient() {
        }
        
        public ExpensesServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ExpensesServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExpensesServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExpensesServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddCategory(string name, int hoa_id) {
            base.Channel.AddCategory(name, hoa_id);
        }
        
        public System.Threading.Tasks.Task AddCategoryAsync(string name, int hoa_id) {
            return base.Channel.AddCategoryAsync(name, hoa_id);
        }
        
        public void EditCategory(int categoryId, string name) {
            base.Channel.EditCategory(categoryId, name);
        }
        
        public System.Threading.Tasks.Task EditCategoryAsync(int categoryId, string name) {
            return base.Channel.EditCategoryAsync(categoryId, name);
        }
        
        public void DeleteCategory(int categoryId) {
            base.Channel.DeleteCategory(categoryId);
        }
        
        public System.Threading.Tasks.Task DeleteCategoryAsync(int categoryId) {
            return base.Channel.DeleteCategoryAsync(categoryId);
        }
        
        public void AddExpense(int categoryId, string name, float quantity, float cost, float resultCost, System.DateTime date) {
            base.Channel.AddExpense(categoryId, name, quantity, cost, resultCost, date);
        }
        
        public System.Threading.Tasks.Task AddExpenseAsync(int categoryId, string name, float quantity, float cost, float resultCost, System.DateTime date) {
            return base.Channel.AddExpenseAsync(categoryId, name, quantity, cost, resultCost, date);
        }
        
        public void AddExternalExpense(int categoryId, string name, float quantity, float cost, float resultCost, System.DateTime date, int objectId) {
            base.Channel.AddExternalExpense(categoryId, name, quantity, cost, resultCost, date, objectId);
        }
        
        public System.Threading.Tasks.Task AddExternalExpenseAsync(int categoryId, string name, float quantity, float cost, float resultCost, System.DateTime date, int objectId) {
            return base.Channel.AddExternalExpenseAsync(categoryId, name, quantity, cost, resultCost, date, objectId);
        }
        
        public void EditExpense(int expenseId, int categoryId, string name, float quantity, float cost, float resultCost, System.DateTime date) {
            base.Channel.EditExpense(expenseId, categoryId, name, quantity, cost, resultCost, date);
        }
        
        public System.Threading.Tasks.Task EditExpenseAsync(int expenseId, int categoryId, string name, float quantity, float cost, float resultCost, System.DateTime date) {
            return base.Channel.EditExpenseAsync(expenseId, categoryId, name, quantity, cost, resultCost, date);
        }
        
        public void EditExternalExpense(int expenseId, int categoryId, string name, float quantity, float cost, float resultCost, System.DateTime date, int objectId) {
            base.Channel.EditExternalExpense(expenseId, categoryId, name, quantity, cost, resultCost, date, objectId);
        }
        
        public System.Threading.Tasks.Task EditExternalExpenseAsync(int expenseId, int categoryId, string name, float quantity, float cost, float resultCost, System.DateTime date, int objectId) {
            return base.Channel.EditExternalExpenseAsync(expenseId, categoryId, name, quantity, cost, resultCost, date, objectId);
        }
        
        public void DeleteExpense(int expenseId) {
            base.Channel.DeleteExpense(expenseId);
        }
        
        public System.Threading.Tasks.Task DeleteExpenseAsync(int expenseId) {
            return base.Channel.DeleteExpenseAsync(expenseId);
        }
        
        public System.Data.DataSet GetCategories(int hoa_id) {
            return base.Channel.GetCategories(hoa_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCategoriesAsync(int hoa_id) {
            return base.Channel.GetCategoriesAsync(hoa_id);
        }
        
        public System.Data.DataSet GetExpenses(System.DateTime dateTime) {
            return base.Channel.GetExpenses(dateTime);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetExpensesAsync(System.DateTime dateTime) {
            return base.Channel.GetExpensesAsync(dateTime);
        }
        
        public System.Data.DataSet GetAllExpenses(int hoa_id) {
            return base.Channel.GetAllExpenses(hoa_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAllExpensesAsync(int hoa_id) {
            return base.Channel.GetAllExpensesAsync(hoa_id);
        }
        
        public System.Data.DataSet GetInternalExpenses(int hoa_id) {
            return base.Channel.GetInternalExpenses(hoa_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetInternalExpensesAsync(int hoa_id) {
            return base.Channel.GetInternalExpensesAsync(hoa_id);
        }
        
        public System.Data.DataSet GetExternalExpenses(int hoa_id) {
            return base.Channel.GetExternalExpenses(hoa_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetExternalExpensesAsync(int hoa_id) {
            return base.Channel.GetExternalExpensesAsync(hoa_id);
        }
    }
}
