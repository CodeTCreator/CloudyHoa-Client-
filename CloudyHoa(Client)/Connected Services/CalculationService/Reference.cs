//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CloudyHoa_Client_.CalculationService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CalculationService.ICalculationsService")]
    public interface ICalculationsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationsService/GetCalculations", ReplyAction="http://tempuri.org/ICalculationsService/GetCalculationsResponse")]
        System.Data.DataSet GetCalculations(int objectId, System.DateTime period);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationsService/GetCalculations", ReplyAction="http://tempuri.org/ICalculationsService/GetCalculationsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCalculationsAsync(int objectId, System.DateTime period);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationsService/GetTemplate", ReplyAction="http://tempuri.org/ICalculationsService/GetTemplateResponse")]
        System.Data.DataSet GetTemplate(int propId, int typeObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationsService/GetTemplate", ReplyAction="http://tempuri.org/ICalculationsService/GetTemplateResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetTemplateAsync(int propId, int typeObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationsService/AddCalculation", ReplyAction="http://tempuri.org/ICalculationsService/AddCalculationResponse")]
        void AddCalculation(int propId, System.DateTime period, float value, int paId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationsService/AddCalculation", ReplyAction="http://tempuri.org/ICalculationsService/AddCalculationResponse")]
        System.Threading.Tasks.Task AddCalculationAsync(int propId, System.DateTime period, float value, int paId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationsService/EditCalculation", ReplyAction="http://tempuri.org/ICalculationsService/EditCalculationResponse")]
        void EditCalculation(int propId, System.DateTime period, float value, int paId, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationsService/EditCalculation", ReplyAction="http://tempuri.org/ICalculationsService/EditCalculationResponse")]
        System.Threading.Tasks.Task EditCalculationAsync(int propId, System.DateTime period, float value, int paId, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationsService/DeleteCalcuation", ReplyAction="http://tempuri.org/ICalculationsService/DeleteCalcuationResponse")]
        void DeleteCalcuation(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationsService/DeleteCalcuation", ReplyAction="http://tempuri.org/ICalculationsService/DeleteCalcuationResponse")]
        System.Threading.Tasks.Task DeleteCalcuationAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationsService/CalculateResultValue", ReplyAction="http://tempuri.org/ICalculationsService/CalculateResultValueResponse")]
        double CalculateResultValue(int propId, int objectId, int paId, System.DateTime period);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationsService/CalculateResultValue", ReplyAction="http://tempuri.org/ICalculationsService/CalculateResultValueResponse")]
        System.Threading.Tasks.Task<double> CalculateResultValueAsync(int propId, int objectId, int paId, System.DateTime period);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationsService/GetCalculationsFromMetadata", ReplyAction="http://tempuri.org/ICalculationsService/GetCalculationsFromMetadataResponse")]
        System.Data.DataSet GetCalculationsFromMetadata(int metadata_id, System.DateTime period);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationsService/GetCalculationsFromMetadata", ReplyAction="http://tempuri.org/ICalculationsService/GetCalculationsFromMetadataResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCalculationsFromMetadataAsync(int metadata_id, System.DateTime period);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalculationsServiceChannel : CloudyHoa_Client_.CalculationService.ICalculationsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculationsServiceClient : System.ServiceModel.ClientBase<CloudyHoa_Client_.CalculationService.ICalculationsService>, CloudyHoa_Client_.CalculationService.ICalculationsService {
        
        public CalculationsServiceClient() {
        }
        
        public CalculationsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalculationsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculationsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculationsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetCalculations(int objectId, System.DateTime period) {
            return base.Channel.GetCalculations(objectId, period);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCalculationsAsync(int objectId, System.DateTime period) {
            return base.Channel.GetCalculationsAsync(objectId, period);
        }
        
        public System.Data.DataSet GetTemplate(int propId, int typeObject) {
            return base.Channel.GetTemplate(propId, typeObject);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetTemplateAsync(int propId, int typeObject) {
            return base.Channel.GetTemplateAsync(propId, typeObject);
        }
        
        public void AddCalculation(int propId, System.DateTime period, float value, int paId) {
            base.Channel.AddCalculation(propId, period, value, paId);
        }
        
        public System.Threading.Tasks.Task AddCalculationAsync(int propId, System.DateTime period, float value, int paId) {
            return base.Channel.AddCalculationAsync(propId, period, value, paId);
        }
        
        public void EditCalculation(int propId, System.DateTime period, float value, int paId, int id) {
            base.Channel.EditCalculation(propId, period, value, paId, id);
        }
        
        public System.Threading.Tasks.Task EditCalculationAsync(int propId, System.DateTime period, float value, int paId, int id) {
            return base.Channel.EditCalculationAsync(propId, period, value, paId, id);
        }
        
        public void DeleteCalcuation(int id) {
            base.Channel.DeleteCalcuation(id);
        }
        
        public System.Threading.Tasks.Task DeleteCalcuationAsync(int id) {
            return base.Channel.DeleteCalcuationAsync(id);
        }
        
        public double CalculateResultValue(int propId, int objectId, int paId, System.DateTime period) {
            return base.Channel.CalculateResultValue(propId, objectId, paId, period);
        }
        
        public System.Threading.Tasks.Task<double> CalculateResultValueAsync(int propId, int objectId, int paId, System.DateTime period) {
            return base.Channel.CalculateResultValueAsync(propId, objectId, paId, period);
        }
        
        public System.Data.DataSet GetCalculationsFromMetadata(int metadata_id, System.DateTime period) {
            return base.Channel.GetCalculationsFromMetadata(metadata_id, period);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCalculationsFromMetadataAsync(int metadata_id, System.DateTime period) {
            return base.Channel.GetCalculationsFromMetadataAsync(metadata_id, period);
        }
    }
}
